<!DOCTYPE html>

<html lang="en" xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta charset="utf-8" />
    <title>Test UI</title>

	<script>
	@Model.JSONViewerJs
	</script>
	<style>
	@Model.JSONViewerCss
	</style>
	
    <style>
        body { font-family: arial,sans-serif; }
        body > header { text-align: center; }
        input { font-family: arial,sans-serif; font-size:14px; }
        .apikey { width: 300px; }
		.submitButton { float: right; }
        .toggleButton, .submitButton { border: none; border-radius: 5px; background-color: #0d47a1; color: white; font-size: 0.8rem; padding: 0.5rem 1rem; }
        .toggleButton:focus, .toggleButton:hover, .submitButton:focus, .submitButton:hover { filter: brightness(1.4); cursor: pointer; }
        .json-viewer, .apikey { background-color: #f5f7ff; border: 1px solid #d8dae1; border-radius: 5px; }
        .top {vertical-align: top; padding-top: 2px; }
		.assemblyChange { padding-top: 10px; }
		.alternateMethodName { color: #36454F }
    </style>
</head>
<body>
    <header>
        <h1>Test Configuration</h1>
        <p>
            Use this form to edit the test data for your scenario and exclude certain tests from execution.<br />
            <b>Specify the Read or Write ApiKey to authorise which tests to run.</b>
        </p>
    </header>
    <form method="post" action="@Model.FormAction" id="testForm">
		<input type="hidden" name="Action" id="Action" Value="6"/>	<!--RunTests-->
        <table>
            <tr>
                <td class="top">Version Info:</td>
                <td><div id="VersionInfo" contentEditable="true" spellcheck="false"></div></td>
            </tr>
            <tr>
                <td class="top">Test Data:</td>
                <td>
					<div id="TestData" contentEditable="true" spellcheck="false"></div>
					<input type="hidden" name="TestData" id="HiddenTestData" />
				</td>
            </tr>
            <tr>
                <td class="top">Api Key:</td>
                <td>
                    <input name="apiKey" type="text" value="@Model.ApiKey" class="apikey">
                </td>
            </tr>
            <tr>
                <td class="top">Tests To Run:</td>
                <td>@Model.MethodNames</td>
            </tr>
            <tr>
                <td></td>
                <td><input class="toggleButton" type="button" value="Toggle All" onclick="toggleTests()" /></td>
            </tr>
            <tr>
                <td></td>
                <td><input class="submitButton" type="submit" value="Execute" onclick="syncTestData()" /></td>
            </tr>
        </table>
    </form>
	<script>

	function syncTestData() {
		var testDataDiv = document.getElementById('TestData');						
		var nodes = testDataDiv.querySelectorAll("a");		
		
		nodes.forEach(function(el) {
			if(el.classList?.contains("collapsed"))
				el.click();
		});
				
		var testData = document.getElementById('HiddenTestData');
		testData.value = testDataDiv.innerText;
		
		return true;
	}

	function toggleTests() {
	  checkboxes = document.getElementsByName('testMethods');
	  for(var i=0, n=checkboxes.length;i<n;i++) {
		checkboxes[i].checked = !checkboxes[i].checked;
	  }
	}

	function showVersionInfo() {
		var jsonViewer = new JSONViewer();	
	
		var el = document.querySelector("#VersionInfo")
		el.appendChild(jsonViewer.getContainer());
	
		var json = `@Model.VersionInfos`;
		var jsonObj = JSON.parse(json);
		jsonViewer.showJSON(jsonObj, -1, -1, ["AvailableActions"]);
	}
	
	function showTestData() {
		var jsonViewer = new JSONViewer();	
	
		var el = document.querySelector("#TestData")
		el.appendChild(jsonViewer.getContainer());
	
		var json = `@Model.TestData`;
		var jsonObj = JSON.parse(json);
		jsonViewer.showJSON(jsonObj);
	}

	showVersionInfo();
	showTestData();
		
	</script>
</body>
</html>